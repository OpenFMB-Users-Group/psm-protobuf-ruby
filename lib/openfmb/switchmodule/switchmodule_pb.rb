# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: switchmodule/switchmodule.proto

require 'google/protobuf'

require 'uml_pb'
require 'commonmodule/commonmodule_pb'


descriptor_data = "\n\x1fswitchmodule/switchmodule.proto\x12\x0cswitchmodule\x1a\tuml.proto\x1a\x1f\x63ommonmodule/commonmodule.proto\"\xc3\x01\n\x19SwitchDiscreteControlXSWI\x12H\n\x15logicalNodeForControl\x18\x01 \x01(\x0b\x32#.commonmodule.LogicalNodeForControlB\x04\x80\xb5\x18\x01\x12#\n\x03Pos\x18\x02 \x01(\x0b\x32\x16.commonmodule.PhaseDPC\x12\x37\n\x15ResetProtectionPickup\x18\x03 \x01(\x0b\x32\x18.commonmodule.ControlSPC\"\xc9\x01\n\x15SwitchDiscreteControl\x12\x36\n\x0c\x63ontrolValue\x18\x01 \x01(\x0b\x32\x1a.commonmodule.ControlValueB\x04\x80\xb5\x18\x01\x12,\n\x05\x63heck\x18\x02 \x01(\x0b\x32\x1d.commonmodule.CheckConditions\x12J\n\x19switchDiscreteControlXSWI\x18\x03 \x01(\x0b\x32\'.switchmodule.SwitchDiscreteControlXSWI\"W\n\x0fProtectedSwitch\x12\x44\n\x13\x63onductingEquipment\x18\x01 \x01(\x0b\x32!.commonmodule.ConductingEquipmentB\x04\x80\xb5\x18\x01\"\xf8\x01\n\x1cSwitchDiscreteControlProfile\x12\x42\n\x12\x63ontrolMessageInfo\x18\x01 \x01(\x0b\x32 .commonmodule.ControlMessageInfoB\x04\x80\xb5\x18\x01\x12@\n\x0fprotectedSwitch\x18\x02 \x01(\x0b\x32\x1d.switchmodule.ProtectedSwitchB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01\x12L\n\x15switchDiscreteControl\x18\x03 \x01(\x0b\x32#.switchmodule.SwitchDiscreteControlB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01:\x04\xc0\xf3\x18\x01\"\xc6\x01\n\x0fSwitchEventXSWI\x12V\n\x1clogicalNodeForEventAndStatus\x18\x01 \x01(\x0b\x32*.commonmodule.LogicalNodeForEventAndStatusB\x04\x80\xb5\x18\x01\x12\x36\n\x0b\x44ynamicTest\x18\x02 \x01(\x0b\x32!.commonmodule.ENS_DynamicTestKind\x12#\n\x03Pos\x18\x03 \x01(\x0b\x32\x16.commonmodule.PhaseDPS\"y\n\x0bSwitchEvent\x12\x32\n\neventValue\x18\x01 \x01(\x0b\x32\x18.commonmodule.EventValueB\x04\x80\xb5\x18\x01\x12\x36\n\x0fswitchEventXSWI\x18\x02 \x01(\x0b\x32\x1d.switchmodule.SwitchEventXSWI\"\xd6\x01\n\x12SwitchEventProfile\x12>\n\x10\x65ventMessageInfo\x18\x01 \x01(\x0b\x32\x1e.commonmodule.EventMessageInfoB\x04\x80\xb5\x18\x01\x12@\n\x0fprotectedSwitch\x18\x02 \x01(\x0b\x32\x1d.switchmodule.ProtectedSwitchB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01\x12\x38\n\x0bswitchEvent\x18\x03 \x01(\x0b\x32\x19.switchmodule.SwitchEventB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01:\x04\xc0\xf3\x18\x01\"\xe3\x02\n\rSwitchReading\x12\x62\n\"conductingEquipmentTerminalReading\x18\x01 \x01(\x0b\x32\x30.commonmodule.ConductingEquipmentTerminalReadingB\x04\x80\xb5\x18\x01\x12\x32\n\x0f\x64iffReadingMMXU\x18\x02 \x01(\x0b\x32\x19.commonmodule.ReadingMMXU\x12*\n\tphaseMMTN\x18\x03 \x01(\x0b\x32\x17.commonmodule.PhaseMMTN\x12.\n\x0breadingMMTR\x18\x04 \x01(\x0b\x32\x19.commonmodule.ReadingMMTR\x12.\n\x0breadingMMXU\x18\x05 \x01(\x0b\x32\x19.commonmodule.ReadingMMXU\x12.\n\x0breadingMMDC\x18\x06 \x01(\x0b\x32\x19.commonmodule.ReadingMMDC\"\xe4\x01\n\x14SwitchReadingProfile\x12\x42\n\x12readingMessageInfo\x18\x01 \x01(\x0b\x32 .commonmodule.ReadingMessageInfoB\x04\x80\xb5\x18\x01\x12@\n\x0fprotectedSwitch\x18\x02 \x01(\x0b\x32\x1d.switchmodule.ProtectedSwitchB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01\x12@\n\rswitchReading\x18\x03 \x03(\x0b\x32\x1b.switchmodule.SwitchReadingB\x0c\x88\xb5\x18\x01\x90\xb5\x18\x01\x98\xb5\x18\x02:\x04\xc0\xf3\x18\x01\"\x83\x02\n\x10SwitchStatusXSWI\x12V\n\x1clogicalNodeForEventAndStatus\x18\x01 \x01(\x0b\x32*.commonmodule.LogicalNodeForEventAndStatusB\x04\x80\xb5\x18\x01\x12\x36\n\x0b\x44ynamicTest\x18\x02 \x01(\x0b\x32!.commonmodule.ENS_DynamicTestKind\x12#\n\x03Pos\x18\x04 \x01(\x0b\x32\x16.commonmodule.PhaseDPS\x12:\n\x10ProtectionPickup\x18\x05 \x01(\x0b\x32\x16.commonmodule.PhaseSPSB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01\"~\n\x0cSwitchStatus\x12\x34\n\x0bstatusValue\x18\x01 \x01(\x0b\x32\x19.commonmodule.StatusValueB\x04\x80\xb5\x18\x01\x12\x38\n\x10switchStatusXSWI\x18\x02 \x01(\x0b\x32\x1e.switchmodule.SwitchStatusXSWI\"\xdb\x01\n\x13SwitchStatusProfile\x12@\n\x11statusMessageInfo\x18\x01 \x01(\x0b\x32\x1f.commonmodule.StatusMessageInfoB\x04\x80\xb5\x18\x01\x12@\n\x0fprotectedSwitch\x18\x02 \x01(\x0b\x32\x1d.switchmodule.ProtectedSwitchB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01\x12:\n\x0cswitchStatus\x18\x03 \x01(\x0b\x32\x1a.switchmodule.SwitchStatusB\x08\x88\xb5\x18\x01\x90\xb5\x18\x01:\x04\xc0\xf3\x18\x01\x42\x84\x01\n\x14openfmb.switchmoduleP\x01ZSgitlab.com/openfmb/psm/ops/protobuf/go-openfmb-ops-protobuf/v2/openfmb/switchmodule\xaa\x02\x14openfmb.switchmoduleb\x06proto3"

pool = ::Google::Protobuf::DescriptorPool.generated_pool
pool.add_serialized_file(descriptor_data)

module Switchmodule
  SwitchDiscreteControlXSWI = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchDiscreteControlXSWI").msgclass
  SwitchDiscreteControl = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchDiscreteControl").msgclass
  ProtectedSwitch = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.ProtectedSwitch").msgclass
  SwitchDiscreteControlProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchDiscreteControlProfile").msgclass
  SwitchEventXSWI = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchEventXSWI").msgclass
  SwitchEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchEvent").msgclass
  SwitchEventProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchEventProfile").msgclass
  SwitchReading = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchReading").msgclass
  SwitchReadingProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchReadingProfile").msgclass
  SwitchStatusXSWI = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchStatusXSWI").msgclass
  SwitchStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchStatus").msgclass
  SwitchStatusProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("switchmodule.SwitchStatusProfile").msgclass
end
