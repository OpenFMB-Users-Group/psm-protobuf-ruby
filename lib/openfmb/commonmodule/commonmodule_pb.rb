# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: commonmodule/commonmodule.proto

require 'google/protobuf'

require 'uml_pb'
require 'google/protobuf/wrappers_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("commonmodule/commonmodule.proto", :syntax => :proto3) do
    add_message "commonmodule.Optional_FaultDirectionKind" do
      optional :value, :enum, 1, "commonmodule.FaultDirectionKind"
    end
    add_message "commonmodule.Optional_PhaseFaultDirectionKind" do
      optional :value, :enum, 1, "commonmodule.PhaseFaultDirectionKind"
    end
    add_message "commonmodule.ACD" do
      optional :dirGeneral, :enum, 1, "commonmodule.FaultDirectionKind"
      optional :dirNeut, :message, 2, "commonmodule.Optional_PhaseFaultDirectionKind"
      optional :dirPhsA, :message, 3, "commonmodule.Optional_PhaseFaultDirectionKind"
      optional :dirPhsB, :message, 4, "commonmodule.Optional_PhaseFaultDirectionKind"
      optional :dirPhsC, :message, 5, "commonmodule.Optional_PhaseFaultDirectionKind"
      optional :general, :bool, 6
      optional :neut, :message, 7, "google.protobuf.BoolValue"
      optional :phsA, :message, 8, "google.protobuf.BoolValue"
      optional :phsB, :message, 9, "google.protobuf.BoolValue"
      optional :phsC, :message, 10, "google.protobuf.BoolValue"
    end
    add_message "commonmodule.IdentifiedObject" do
      optional :description, :message, 1, "google.protobuf.StringValue"
      optional :mRID, :message, 2, "google.protobuf.StringValue"
      optional :name, :message, 3, "google.protobuf.StringValue"
    end
    add_message "commonmodule.ACDCTerminal" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
      optional :connected, :message, 2, "google.protobuf.BoolValue"
      optional :sequenceNumber, :message, 3, "google.protobuf.Int32Value"
    end
    add_message "commonmodule.Optional_UnitSymbolKind" do
      optional :value, :enum, 1, "commonmodule.UnitSymbolKind"
    end
    add_message "commonmodule.Optional_UnitMultiplierKind" do
      optional :value, :enum, 1, "commonmodule.UnitMultiplierKind"
    end
    add_message "commonmodule.ActivePower" do
      optional :multiplier, :message, 1, "commonmodule.Optional_UnitMultiplierKind"
      optional :unit, :message, 2, "commonmodule.Optional_UnitSymbolKind"
      optional :value, :message, 3, "google.protobuf.FloatValue"
    end
    add_message "commonmodule.Optional_PhaseCodeKind" do
      optional :value, :enum, 1, "commonmodule.PhaseCodeKind"
    end
    add_message "commonmodule.Unit" do
      optional :multiplier, :message, 1, "commonmodule.Optional_UnitMultiplierKind"
      optional :SIUnit, :enum, 2, "commonmodule.UnitSymbolKind"
    end
    add_message "commonmodule.Optional_ValidityKind" do
      optional :value, :enum, 1, "commonmodule.ValidityKind"
    end
    add_message "commonmodule.DetailQual" do
      optional :badReference, :bool, 1
      optional :failure, :bool, 2
      optional :inaccurate, :bool, 3
      optional :inconsistent, :bool, 4
      optional :oldData, :bool, 5
      optional :oscillatory, :bool, 6
      optional :outOfRange, :bool, 7
      optional :overflow, :bool, 8
    end
    add_message "commonmodule.Optional_SourceKind" do
      optional :value, :enum, 1, "commonmodule.SourceKind"
    end
    add_message "commonmodule.Quality" do
      optional :detailQual, :message, 1, "commonmodule.DetailQual"
      optional :operatorBlocked, :bool, 2
      optional :source, :enum, 3, "commonmodule.SourceKind"
      optional :test, :bool, 4
      optional :validity, :enum, 5, "commonmodule.ValidityKind"
    end
    add_message "commonmodule.Optional_TimeAccuracyKind" do
      optional :value, :enum, 1, "commonmodule.TimeAccuracyKind"
    end
    add_message "commonmodule.TimeQuality" do
      optional :clockFailure, :bool, 1
      optional :clockNotSynchronized, :bool, 2
      optional :leapSecondsKnown, :bool, 3
      optional :timeAccuracy, :enum, 4, "commonmodule.TimeAccuracyKind"
    end
    add_message "commonmodule.Timestamp" do
      optional :seconds, :uint64, 2
      optional :tq, :message, 3, "commonmodule.TimeQuality"
      optional :nanoseconds, :uint32, 4
    end
    add_message "commonmodule.MV" do
      optional :mag, :double, 1
      optional :q, :message, 2, "commonmodule.Quality"
      optional :t, :message, 3, "commonmodule.Timestamp"
      optional :units, :message, 4, "commonmodule.Unit"
    end
    add_message "commonmodule.LogicalNode" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
    end
    add_message "commonmodule.AnalogEventAndStatusGGIO" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :AnIn, :message, 2, "commonmodule.MV"
      optional :Phase, :message, 3, "commonmodule.Optional_PhaseCodeKind"
    end
    add_message "commonmodule.NamedObject" do
      optional :description, :message, 1, "google.protobuf.StringValue"
      optional :name, :message, 2, "google.protobuf.StringValue"
    end
    add_message "commonmodule.ApplicationSystem" do
      optional :namedObject, :message, 1, "commonmodule.NamedObject"
      optional :mRID, :string, 2
    end
    add_message "commonmodule.ASG" do
      optional :setMag, :double, 1
    end
    add_message "commonmodule.BCR" do
      optional :actVal, :int64, 1
      optional :q, :message, 2, "commonmodule.Quality"
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.StatusSPS" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :bool, 2
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.BooleanEventAndStatusGGIO" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :Ind, :message, 2, "commonmodule.StatusSPS"
      optional :Phase, :message, 3, "commonmodule.Optional_PhaseCodeKind"
    end
    add_message "commonmodule.MessageInfo" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
      optional :messageTimeStamp, :message, 2, "commonmodule.Timestamp"
    end
    add_message "commonmodule.CapabilityMessageInfo" do
      optional :messageInfo, :message, 1, "commonmodule.MessageInfo"
    end
    add_message "commonmodule.CheckConditions" do
      optional :interlockCheck, :message, 1, "google.protobuf.BoolValue"
      optional :synchroCheck, :message, 2, "google.protobuf.BoolValue"
    end
    add_message "commonmodule.ClearingTime" do
      optional :seconds, :uint64, 2
      optional :nanoseconds, :uint32, 3
    end
    add_message "commonmodule.Vector" do
      optional :ang, :message, 1, "google.protobuf.DoubleValue"
      optional :mag, :double, 2
    end
    add_message "commonmodule.CMV" do
      optional :cVal, :message, 1, "commonmodule.Vector"
      optional :q, :message, 2, "commonmodule.Quality"
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.ConductingEquipment" do
      optional :namedObject, :message, 1, "commonmodule.NamedObject"
      optional :mRID, :string, 2
    end
    add_message "commonmodule.Terminal" do
      optional :aCDCTerminal, :message, 1, "commonmodule.ACDCTerminal"
      optional :phases, :message, 2, "commonmodule.Optional_PhaseCodeKind"
    end
    add_message "commonmodule.ConductingEquipmentTerminalReading" do
      optional :terminal, :message, 1, "commonmodule.Terminal"
    end
    add_message "commonmodule.ControlAPC" do
      optional :ctlVal, :double, 1
    end
    add_message "commonmodule.ControlDPC" do
      optional :ctlVal, :bool, 1
    end
    add_message "commonmodule.ControlTimestamp" do
      optional :seconds, :uint64, 2
      optional :nanoseconds, :uint32, 3
    end
    add_message "commonmodule.Optional_ScheduleParameterKind" do
      optional :value, :enum, 1, "commonmodule.ScheduleParameterKind"
    end
    add_message "commonmodule.ENG_ScheduleParameter" do
      optional :scheduleParameterType, :enum, 1, "commonmodule.ScheduleParameterKind"
      optional :value, :double, 2
    end
    add_message "commonmodule.SchedulePoint" do
      repeated :scheduleParameter, :message, 1, "commonmodule.ENG_ScheduleParameter"
      optional :startTime, :message, 2, "commonmodule.ControlTimestamp"
    end
    add_message "commonmodule.ScheduleCSG" do
      repeated :schPts, :message, 1, "commonmodule.SchedulePoint"
    end
    add_message "commonmodule.ControlScheduleFSCH" do
      optional :ValACSG, :message, 1, "commonmodule.ScheduleCSG"
    end
    add_message "commonmodule.LogicalNodeForControl" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
    end
    add_message "commonmodule.ControlFSCC" do
      optional :logicalNodeForControl, :message, 1, "commonmodule.LogicalNodeForControl"
      optional :controlScheduleFSCH, :message, 2, "commonmodule.ControlScheduleFSCH"
      optional :islandControlScheduleFSCH, :message, 3, "commonmodule.ControlScheduleFSCH"
    end
    add_message "commonmodule.ControlINC" do
      optional :ctlVal, :int32, 1
    end
    add_message "commonmodule.ControlING" do
      optional :setVal, :int32, 1
      optional :units, :message, 2, "commonmodule.Unit"
    end
    add_message "commonmodule.ControlISC" do
      optional :ctlVal, :int32, 1
    end
    add_message "commonmodule.ControlMessageInfo" do
      optional :messageInfo, :message, 1, "commonmodule.MessageInfo"
    end
    add_message "commonmodule.ControlSPC" do
      optional :ctlVal, :bool, 1
    end
    add_message "commonmodule.ControlValue" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
      optional :modBlk, :message, 3, "google.protobuf.BoolValue"
      optional :reset, :message, 4, "google.protobuf.BoolValue"
    end
    add_message "commonmodule.CumulativeTime" do
      optional :seconds, :uint64, 2
      optional :nanoseconds, :uint32, 3
    end
    add_message "commonmodule.DateTimeInterval" do
      optional :end, :message, 1, "google.protobuf.Int64Value"
      optional :start, :message, 2, "google.protobuf.Int64Value"
    end
    add_message "commonmodule.DEL" do
      optional :phsAB, :message, 1, "commonmodule.CMV"
      optional :phsBC, :message, 2, "commonmodule.CMV"
      optional :phsCA, :message, 3, "commonmodule.CMV"
    end
    add_message "commonmodule.PhaseDPC" do
      optional :phs3, :message, 1, "commonmodule.ControlDPC"
      optional :phsA, :message, 2, "commonmodule.ControlDPC"
      optional :phsB, :message, 3, "commonmodule.ControlDPC"
      optional :phsC, :message, 4, "commonmodule.ControlDPC"
    end
    add_message "commonmodule.DiscreteControlXCBR" do
      optional :logicalNodeForControl, :message, 1, "commonmodule.LogicalNodeForControl"
      optional :Pos, :message, 2, "commonmodule.PhaseDPC"
      optional :ProtectionMode, :message, 3, "commonmodule.ControlINC"
      optional :RecloseEnabled, :message, 4, "commonmodule.ControlSPC"
      optional :ResetProtectionPickup, :message, 5, "commonmodule.ControlSPC"
    end
    add_message "commonmodule.EnergyConsumer" do
      optional :conductingEquipment, :message, 1, "commonmodule.ConductingEquipment"
      optional :operatingLimit, :message, 2, "google.protobuf.StringValue"
    end
    add_message "commonmodule.Optional_CalcMethodKind" do
      optional :value, :enum, 1, "commonmodule.CalcMethodKind"
    end
    add_message "commonmodule.ENG_CalcMethodKind" do
      optional :setVal, :enum, 1, "commonmodule.CalcMethodKind"
    end
    add_message "commonmodule.Optional_GridConnectModeKind" do
      optional :value, :enum, 1, "commonmodule.GridConnectModeKind"
    end
    add_message "commonmodule.ENG_GridConnectModeKind" do
      optional :setVal, :enum, 1, "commonmodule.GridConnectModeKind"
      optional :setValExtension, :message, 2, "google.protobuf.StringValue"
    end
    add_message "commonmodule.Optional_PFSignKind" do
      optional :value, :enum, 1, "commonmodule.PFSignKind"
    end
    add_message "commonmodule.ENG_PFSignKind" do
      optional :setVal, :enum, 1, "commonmodule.PFSignKind"
    end
    add_message "commonmodule.Optional_BehaviourModeKind" do
      optional :value, :enum, 1, "commonmodule.BehaviourModeKind"
    end
    add_message "commonmodule.ENS_BehaviourModeKind" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :enum, 2, "commonmodule.BehaviourModeKind"
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.Optional_DERGeneratorStateKind" do
      optional :value, :enum, 1, "commonmodule.DERGeneratorStateKind"
    end
    add_message "commonmodule.ENS_DERGeneratorStateKind" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :enum, 2, "commonmodule.DERGeneratorStateKind"
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.Optional_DynamicTestKind" do
      optional :value, :enum, 1, "commonmodule.DynamicTestKind"
    end
    add_message "commonmodule.ENS_DynamicTestKind" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :enum, 2, "commonmodule.DynamicTestKind"
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.ENS_GridConnectModeKind" do
      optional :stVal, :enum, 1, "commonmodule.GridConnectModeKind"
      optional :stValExtension, :string, 2
    end
    add_message "commonmodule.Optional_HealthKind" do
      optional :value, :enum, 1, "commonmodule.HealthKind"
    end
    add_message "commonmodule.ENS_HealthKind" do
      optional :d, :message, 1, "google.protobuf.StringValue"
      optional :stVal, :enum, 2, "commonmodule.HealthKind"
    end
    add_message "commonmodule.Optional_SwitchingCapabilityKind" do
      optional :value, :enum, 1, "commonmodule.SwitchingCapabilityKind"
    end
    add_message "commonmodule.ENS_SwitchingCapabilityKind" do
      optional :blkEna, :message, 1, "google.protobuf.BoolValue"
      optional :stVal, :enum, 2, "commonmodule.SwitchingCapabilityKind"
    end
    add_message "commonmodule.OperationDCTE" do
      optional :rndDlTmms, :message, 1, "commonmodule.ControlING"
      optional :rtnDlTmms, :message, 2, "commonmodule.ControlING"
      optional :rtnRmpTmms, :message, 3, "commonmodule.ControlING"
    end
    add_message "commonmodule.EnterServiceAPC" do
      optional :enterServiceParameter, :message, 1, "commonmodule.OperationDCTE"
      optional :hzHiLim, :float, 2
      optional :hzLoLim, :float, 3
      optional :rtnSrvAuto, :bool, 4
      optional :vHiLim, :float, 5
      optional :vLoLim, :float, 6
    end
    add_message "commonmodule.ESS" do
      optional :conductingEquipment, :message, 1, "commonmodule.ConductingEquipment"
    end
    add_message "commonmodule.EventMessageInfo" do
      optional :messageInfo, :message, 1, "commonmodule.MessageInfo"
    end
    add_message "commonmodule.EventValue" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
      optional :modBlk, :message, 2, "google.protobuf.BoolValue"
    end
    add_message "commonmodule.ForecastValueSource" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
    end
    add_message "commonmodule.ForecastIED" do
      optional :forecastValueSource, :message, 1, "commonmodule.ForecastValueSource"
      optional :sourceApplicationID, :string, 2
      optional :sourceDateTime, :int64, 3
    end
    add_message "commonmodule.ForecastValue" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
    end
    add_message "commonmodule.OperationDHFW" do
      optional :modEna, :bool, 1
      optional :OplTmmsMax, :message, 2, "commonmodule.ClearingTime"
    end
    add_message "commonmodule.OperationDLFW" do
      optional :modEna, :bool, 1
      optional :OplTmmsMax, :message, 2, "commonmodule.ClearingTime"
    end
    add_message "commonmodule.HzWPoint" do
      optional :deadbandHzVal, :float, 1
      optional :slopeVal, :float, 2
    end
    add_message "commonmodule.HzWAPC" do
      optional :overHzWPt, :message, 1, "commonmodule.HzWPoint"
      optional :overHzWParameter, :message, 2, "commonmodule.OperationDHFW"
      optional :underHzWPt, :message, 3, "commonmodule.HzWPoint"
      optional :underHzWParameter, :message, 4, "commonmodule.OperationDLFW"
    end
    add_message "commonmodule.StatusINS" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :int32, 2
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.IntegerEventAndStatusGGIO" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :IntIn, :message, 2, "commonmodule.StatusINS"
      optional :Phase, :message, 3, "commonmodule.Optional_PhaseCodeKind"
    end
    add_message "commonmodule.OperationDWMX" do
      optional :modEna, :bool, 1
    end
    add_message "commonmodule.OperationDWMN" do
      optional :modEna, :bool, 1
    end
    add_message "commonmodule.LimitWAPC" do
      optional :maxLimParameter, :message, 1, "commonmodule.OperationDWMX"
      optional :minLimParameter, :message, 2, "commonmodule.OperationDWMN"
      optional :wMaxSptVal, :float, 3
      optional :wMinSptVal, :float, 4
    end
    add_message "commonmodule.LogicalNodeForEventAndStatus" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :Beh, :message, 2, "commonmodule.ENS_BehaviourModeKind"
      optional :EEHealth, :message, 3, "commonmodule.ENS_HealthKind"
      optional :HotLineTag, :message, 4, "commonmodule.StatusSPS"
      optional :RemoteBlk, :message, 5, "commonmodule.StatusSPS"
    end
    add_message "commonmodule.MeasurementValue" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
    end
    add_message "commonmodule.Meter" do
      optional :conductingEquipment, :message, 1, "commonmodule.ConductingEquipment"
    end
    add_message "commonmodule.NameplateValue" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
      optional :model, :message, 2, "google.protobuf.StringValue"
      optional :sernum, :message, 3, "google.protobuf.StringValue"
      optional :swRev, :message, 4, "google.protobuf.StringValue"
      optional :vendor, :message, 5, "google.protobuf.StringValue"
    end
    add_message "commonmodule.OperationDFPF" do
      optional :modEna, :bool, 1
      optional :pFExtSet, :bool, 2
      optional :pFGnTgtMxVal, :float, 3
    end
    add_message "commonmodule.OperationDVAR" do
      optional :varTgtSpt, :float, 1
    end
    add_message "commonmodule.OperationDVVR" do
      optional :modEna, :bool, 1
      optional :OplTmmsMax, :message, 2, "commonmodule.ClearingTime"
      optional :VRef, :float, 3
      optional :VRefAdjEna, :bool, 4
      optional :VRefTmms, :message, 5, "commonmodule.ControlING"
    end
    add_message "commonmodule.OperationDVWC" do
      optional :modEna, :bool, 1
      optional :OplTmmsMax, :message, 2, "commonmodule.ClearingTime"
    end
    add_message "commonmodule.OperationDWGC" do
      optional :wSpt, :float, 1
    end
    add_message "commonmodule.OperationDWVR" do
      optional :modEna, :bool, 1
    end
    add_message "commonmodule.OptimizationMessageInfo" do
      optional :messageInfo, :message, 1, "commonmodule.MessageInfo"
    end
    add_message "commonmodule.PFSPC" do
      optional :ctlVal, :bool, 1
      optional :pFParameter, :message, 2, "commonmodule.OperationDFPF"
    end
    add_message "commonmodule.PhaseAPC" do
      optional :phs3, :message, 1, "commonmodule.ControlAPC"
      optional :phsA, :message, 2, "commonmodule.ControlAPC"
      optional :phsB, :message, 3, "commonmodule.ControlAPC"
      optional :phsC, :message, 4, "commonmodule.ControlAPC"
    end
    add_message "commonmodule.Optional_DbPosKind" do
      optional :value, :enum, 1, "commonmodule.DbPosKind"
    end
    add_message "commonmodule.StatusDPS" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :enum, 2, "commonmodule.DbPosKind"
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.PhaseDPS" do
      optional :phs3, :message, 1, "commonmodule.StatusDPS"
      optional :phsA, :message, 2, "commonmodule.StatusDPS"
      optional :phsB, :message, 3, "commonmodule.StatusDPS"
      optional :phsC, :message, 4, "commonmodule.StatusDPS"
    end
    add_message "commonmodule.PhaseINS" do
      optional :phs3, :message, 1, "commonmodule.StatusINS"
      optional :phsA, :message, 2, "commonmodule.StatusINS"
      optional :phsB, :message, 3, "commonmodule.StatusINS"
      optional :phsC, :message, 4, "commonmodule.StatusINS"
    end
    add_message "commonmodule.PhaseISC" do
      optional :phs3, :message, 1, "commonmodule.ControlISC"
      optional :phsA, :message, 2, "commonmodule.ControlISC"
      optional :phsB, :message, 3, "commonmodule.ControlISC"
      optional :phsC, :message, 4, "commonmodule.ControlISC"
    end
    add_message "commonmodule.ReadingMMTN" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :DmdVAh, :message, 2, "commonmodule.BCR"
      optional :DmdVArh, :message, 3, "commonmodule.BCR"
      optional :DmdWh, :message, 4, "commonmodule.BCR"
      optional :SupVAh, :message, 5, "commonmodule.BCR"
      optional :SupVArh, :message, 6, "commonmodule.BCR"
      optional :SupWh, :message, 7, "commonmodule.BCR"
      optional :TotVAh, :message, 8, "commonmodule.BCR"
      optional :TotVArh, :message, 9, "commonmodule.BCR"
      optional :TotWh, :message, 10, "commonmodule.BCR"
    end
    add_message "commonmodule.PhaseMMTN" do
      optional :phsA, :message, 1, "commonmodule.ReadingMMTN"
      optional :phsAB, :message, 2, "commonmodule.ReadingMMTN"
      optional :phsB, :message, 3, "commonmodule.ReadingMMTN"
      optional :phsBC, :message, 4, "commonmodule.ReadingMMTN"
      optional :phsC, :message, 5, "commonmodule.ReadingMMTN"
      optional :phsCA, :message, 6, "commonmodule.ReadingMMTN"
    end
    add_message "commonmodule.Optional_RecloseActionKind" do
      optional :value, :enum, 1, "commonmodule.RecloseActionKind"
    end
    add_message "commonmodule.PhaseRecloseAction" do
      optional :phs3, :message, 1, "commonmodule.Optional_RecloseActionKind"
      optional :phsA, :message, 2, "commonmodule.Optional_RecloseActionKind"
      optional :phsB, :message, 3, "commonmodule.Optional_RecloseActionKind"
      optional :phsC, :message, 4, "commonmodule.Optional_RecloseActionKind"
    end
    add_message "commonmodule.PhaseSPC" do
      optional :phs3, :message, 1, "commonmodule.ControlSPC"
      optional :phsA, :message, 2, "commonmodule.ControlSPC"
      optional :phsB, :message, 3, "commonmodule.ControlSPC"
      optional :phsC, :message, 4, "commonmodule.ControlSPC"
    end
    add_message "commonmodule.PhaseSPS" do
      optional :phs3, :message, 1, "commonmodule.StatusSPS"
      optional :phsA, :message, 2, "commonmodule.StatusSPS"
      optional :phsB, :message, 3, "commonmodule.StatusSPS"
      optional :phsC, :message, 4, "commonmodule.StatusSPS"
    end
    add_message "commonmodule.PMG" do
      optional :net, :message, 1, "commonmodule.MV"
      optional :phsA, :message, 2, "commonmodule.MV"
      optional :phsB, :message, 3, "commonmodule.MV"
      optional :phsC, :message, 4, "commonmodule.MV"
    end
    add_message "commonmodule.RampRate" do
      optional :negativeReactivePowerKVArPerMin, :message, 1, "google.protobuf.FloatValue"
      optional :negativeRealPowerKWPerMin, :message, 2, "google.protobuf.FloatValue"
      optional :positiveReactivePowerKVArPerMin, :message, 3, "google.protobuf.FloatValue"
      optional :positiveRealPowerKWPerMin, :message, 4, "google.protobuf.FloatValue"
    end
    add_message "commonmodule.ReadingMessageInfo" do
      optional :messageInfo, :message, 1, "commonmodule.MessageInfo"
    end
    add_message "commonmodule.ReadingMMTR" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :DmdVAh, :message, 2, "commonmodule.BCR"
      optional :DmdVArh, :message, 3, "commonmodule.BCR"
      optional :DmdWh, :message, 4, "commonmodule.BCR"
      optional :SupVAh, :message, 5, "commonmodule.BCR"
      optional :SupVArh, :message, 6, "commonmodule.BCR"
      optional :SupWh, :message, 7, "commonmodule.BCR"
      optional :TotVAh, :message, 8, "commonmodule.BCR"
      optional :TotVArh, :message, 9, "commonmodule.BCR"
      optional :TotWh, :message, 10, "commonmodule.BCR"
    end
    add_message "commonmodule.WYE" do
      optional :net, :message, 1, "commonmodule.CMV"
      optional :neut, :message, 2, "commonmodule.CMV"
      optional :phsA, :message, 3, "commonmodule.CMV"
      optional :phsB, :message, 4, "commonmodule.CMV"
      optional :phsC, :message, 5, "commonmodule.CMV"
    end
    add_message "commonmodule.ReadingMMXU" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :A, :message, 2, "commonmodule.WYE"
      optional :ClcMth, :message, 3, "commonmodule.ENG_CalcMethodKind"
      optional :Hz, :message, 4, "commonmodule.MV"
      optional :PF, :message, 5, "commonmodule.WYE"
      optional :PFSign, :message, 6, "commonmodule.ENG_PFSignKind"
      optional :PhV, :message, 7, "commonmodule.WYE"
      optional :PPV, :message, 8, "commonmodule.DEL"
      optional :VA, :message, 9, "commonmodule.WYE"
      optional :VAr, :message, 10, "commonmodule.WYE"
      optional :W, :message, 11, "commonmodule.WYE"
    end
    add_message "commonmodule.SourceCapabilityConfiguration" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :AMax, :message, 2, "commonmodule.ASG"
      optional :VAMax, :message, 3, "commonmodule.ASG"
      optional :VarMaxAbs, :message, 4, "commonmodule.ASG"
      optional :VarMaxInj, :message, 5, "commonmodule.ASG"
      optional :VMax, :message, 6, "commonmodule.ASG"
      optional :VMin, :message, 7, "commonmodule.ASG"
      optional :VNom, :message, 8, "commonmodule.ASG"
      optional :WMax, :message, 9, "commonmodule.ASG"
      optional :WOvrExt, :message, 10, "commonmodule.ASG"
      optional :WOvrExtPF, :message, 11, "commonmodule.ASG"
      optional :WUndExt, :message, 12, "commonmodule.ASG"
      optional :WUndExtPF, :message, 13, "commonmodule.ASG"
    end
    add_message "commonmodule.Optional_NorOpCatKind" do
      optional :value, :enum, 1, "commonmodule.NorOpCatKind"
    end
    add_message "commonmodule.Optional_AbnOpCatKind" do
      optional :value, :enum, 1, "commonmodule.AbnOpCatKind"
    end
    add_message "commonmodule.SourceCapabilityRatings" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :AbnOpCatRtg, :enum, 2, "commonmodule.AbnOpCatKind"
      optional :AMaxRtg, :message, 3, "commonmodule.ASG"
      optional :FreqNomRtg, :message, 4, "commonmodule.ASG"
      optional :NorOpCatRtg, :enum, 5, "commonmodule.NorOpCatKind"
      optional :ReactSusceptRtg, :message, 6, "commonmodule.ASG"
      optional :VAMaxRtg, :message, 7, "commonmodule.ASG"
      optional :VarMaxAbsRtg, :message, 8, "commonmodule.ASG"
      optional :VarMaxInjRtg, :message, 9, "commonmodule.ASG"
      optional :VMaxRtg, :message, 10, "commonmodule.ASG"
      optional :VMinRtg, :message, 11, "commonmodule.ASG"
      optional :VNomRtg, :message, 12, "commonmodule.ASG"
      optional :WMaxRtg, :message, 13, "commonmodule.ASG"
      optional :WOvrExtRtg, :message, 14, "commonmodule.ASG"
      optional :WOvrExtRtgPF, :message, 15, "commonmodule.ASG"
      optional :WUndExtRtg, :message, 16, "commonmodule.ASG"
      optional :WUndExtRtgPF, :message, 17, "commonmodule.ASG"
    end
    add_message "commonmodule.StatusAndEventXCBR" do
      optional :logicalNodeForEventAndStatus, :message, 1, "commonmodule.LogicalNodeForEventAndStatus"
      optional :DynamicTest, :message, 2, "commonmodule.ENS_DynamicTestKind"
      optional :Pos, :message, 3, "commonmodule.PhaseDPS"
      optional :ProtectionPickup, :message, 4, "commonmodule.ACD"
      optional :ProtectionMode, :message, 5, "commonmodule.StatusINS"
      optional :RecloseEnabled, :message, 6, "commonmodule.PhaseSPS"
      optional :ReclosingAction, :message, 7, "commonmodule.PhaseRecloseAction"
    end
    add_message "commonmodule.StatusINC" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :int32, 2
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.StatusISC" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :int32, 2
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.StatusMessageInfo" do
      optional :messageInfo, :message, 1, "commonmodule.MessageInfo"
    end
    add_message "commonmodule.StatusValue" do
      optional :identifiedObject, :message, 1, "commonmodule.IdentifiedObject"
      optional :modBlk, :message, 2, "google.protobuf.BoolValue"
    end
    add_message "commonmodule.VSS" do
      optional :q, :message, 1, "commonmodule.Quality"
      optional :stVal, :string, 2
      optional :t, :message, 3, "commonmodule.Timestamp"
    end
    add_message "commonmodule.StringEventAndStatusGGIO" do
      optional :logicalNode, :message, 1, "commonmodule.LogicalNode"
      optional :Phase, :message, 2, "commonmodule.Optional_PhaseCodeKind"
      optional :StrIn, :message, 3, "commonmodule.VSS"
    end
    add_message "commonmodule.SwitchPoint" do
      optional :Pos, :message, 1, "commonmodule.ControlDPC"
      optional :startTime, :message, 2, "commonmodule.ControlTimestamp"
    end
    add_message "commonmodule.SwitchCSG" do
      repeated :crvPts, :message, 1, "commonmodule.SwitchPoint"
    end
    add_message "commonmodule.TmHzPoint" do
      optional :hzVal, :float, 1
      optional :tmVal, :message, 2, "commonmodule.ClearingTime"
    end
    add_message "commonmodule.TmHzCSG" do
      repeated :overCrvPts, :message, 1, "commonmodule.TmHzPoint"
      repeated :underCrvPts, :message, 2, "commonmodule.TmHzPoint"
    end
    add_message "commonmodule.TmVoltPoint" do
      optional :tmVal, :message, 1, "commonmodule.ClearingTime"
      optional :voltVal, :float, 2
    end
    add_message "commonmodule.TmVoltCSG" do
      repeated :overCrvPts, :message, 1, "commonmodule.TmVoltPoint"
      repeated :underCrvPts, :message, 2, "commonmodule.TmVoltPoint"
    end
    add_message "commonmodule.VarSPC" do
      optional :modEna, :bool, 1
      optional :varParameter, :message, 2, "commonmodule.OperationDVAR"
    end
    add_message "commonmodule.VoltVarPoint" do
      optional :varVal, :float, 1
      optional :voltVal, :float, 2
    end
    add_message "commonmodule.VoltVarCSG" do
      repeated :crvPts, :message, 1, "commonmodule.VoltVarPoint"
      optional :vVarParameter, :message, 2, "commonmodule.OperationDVVR"
    end
    add_message "commonmodule.VoltWPoint" do
      optional :voltVal, :float, 1
      optional :wVal, :float, 2
    end
    add_message "commonmodule.VoltWCSG" do
      repeated :crvPts, :message, 1, "commonmodule.VoltWPoint"
      optional :voltWParameter, :message, 2, "commonmodule.OperationDVWC"
    end
    add_message "commonmodule.VSC" do
      optional :ctlVal, :string, 1
    end
    add_message "commonmodule.WSPC" do
      optional :modEna, :bool, 1
      optional :wParameter, :message, 2, "commonmodule.OperationDWGC"
    end
    add_message "commonmodule.WVarPoint" do
      optional :varVal, :float, 1
      optional :wVal, :float, 2
    end
    add_message "commonmodule.WVarCSG" do
      repeated :crvPts, :message, 1, "commonmodule.WVarPoint"
      optional :wVarParameter, :message, 2, "commonmodule.OperationDWVR"
    end
    add_message "commonmodule.Optional_AlrmKind" do
      optional :value, :enum, 1, "commonmodule.AlrmKind"
    end
    add_message "commonmodule.Optional_ControlModeKind" do
      optional :value, :enum, 1, "commonmodule.ControlModeKind"
    end
    add_message "commonmodule.Optional_DirectionModeKind" do
      optional :value, :enum, 1, "commonmodule.DirectionModeKind"
    end
    add_message "commonmodule.Optional_GridConnectionStateKind" do
      optional :value, :enum, 1, "commonmodule.GridConnectionStateKind"
    end
    add_message "commonmodule.Optional_OperatingStateKind" do
      optional :value, :enum, 1, "commonmodule.OperatingStateKind"
    end
    add_message "commonmodule.Optional_ReactivePowerControlKind" do
      optional :value, :enum, 1, "commonmodule.ReactivePowerControlKind"
    end
    add_message "commonmodule.Optional_RealPowerControlKind" do
      optional :value, :enum, 1, "commonmodule.RealPowerControlKind"
    end
    add_message "commonmodule.Optional_StateKind" do
      optional :value, :enum, 1, "commonmodule.StateKind"
    end
    add_message "commonmodule.Optional_VoltLimitModeKind" do
      optional :value, :enum, 1, "commonmodule.VoltLimitModeKind"
    end
    add_enum "commonmodule.FaultDirectionKind" do
      value :FaultDirectionKind_UNDEFINED, 0
      value :FaultDirectionKind_unknown, 1
      value :FaultDirectionKind_forward, 2
      value :FaultDirectionKind_backward, 3
      value :FaultDirectionKind_both, 4
    end
    add_enum "commonmodule.PhaseFaultDirectionKind" do
      value :PhaseFaultDirectionKind_UNDEFINED, 0
      value :PhaseFaultDirectionKind_unknown, 1
      value :PhaseFaultDirectionKind_forward, 2
      value :PhaseFaultDirectionKind_backward, 3
    end
    add_enum "commonmodule.UnitSymbolKind" do
      value :UnitSymbolKind_none, 0
      value :UnitSymbolKind_meter, 2
      value :UnitSymbolKind_gram, 3
      value :UnitSymbolKind_Amp, 5
      value :UnitSymbolKind_deg, 9
      value :UnitSymbolKind_rad, 10
      value :UnitSymbolKind_degC, 23
      value :UnitSymbolKind_Farad, 25
      value :UnitSymbolKind_sec, 27
      value :UnitSymbolKind_Henry, 28
      value :UnitSymbolKind_V, 29
      value :UnitSymbolKind_ohm, 30
      value :UnitSymbolKind_Joule, 31
      value :UnitSymbolKind_Newton, 32
      value :UnitSymbolKind_Hz, 33
      value :UnitSymbolKind_W, 38
      value :UnitSymbolKind_Pa, 39
      value :UnitSymbolKind_m2, 41
      value :UnitSymbolKind_Siemens, 53
      value :UnitSymbolKind_VA, 61
      value :UnitSymbolKind_VAr, 63
      value :UnitSymbolKind_wPerVA, 65
      value :UnitSymbolKind_VAh, 71
      value :UnitSymbolKind_Wh, 72
      value :UnitSymbolKind_VArh, 73
      value :UnitSymbolKind_hzPerS, 75
      value :UnitSymbolKind_wPerS, 81
      value :UnitSymbolKind_other, 100
      value :UnitSymbolKind_Ah, 106
      value :UnitSymbolKind_min, 159
      value :UnitSymbolKind_hour, 160
      value :UnitSymbolKind_m3, 166
      value :UnitSymbolKind_wPerM2, 179
      value :UnitSymbolKind_degF, 279
      value :UnitSymbolKind_mph, 500
    end
    add_enum "commonmodule.UnitMultiplierKind" do
      value :UnitMultiplierKind_UNDEFINED, 0
      value :UnitMultiplierKind_none, 1
      value :UnitMultiplierKind_other, 2
      value :UnitMultiplierKind_centi, 3
      value :UnitMultiplierKind_deci, 4
      value :UnitMultiplierKind_Giga, 5
      value :UnitMultiplierKind_kilo, 6
      value :UnitMultiplierKind_Mega, 7
      value :UnitMultiplierKind_micro, 8
      value :UnitMultiplierKind_milli, 9
      value :UnitMultiplierKind_nano, 10
      value :UnitMultiplierKind_pico, 11
      value :UnitMultiplierKind_Tera, 12
    end
    add_enum "commonmodule.PhaseCodeKind" do
      value :PhaseCodeKind_none, 0
      value :PhaseCodeKind_other, 1
      value :PhaseCodeKind_N, 16
      value :PhaseCodeKind_C, 32
      value :PhaseCodeKind_CN, 33
      value :PhaseCodeKind_AC, 40
      value :PhaseCodeKind_ACN, 41
      value :PhaseCodeKind_B, 64
      value :PhaseCodeKind_BN, 65
      value :PhaseCodeKind_BC, 66
      value :PhaseCodeKind_BCN, 97
      value :PhaseCodeKind_A, 128
      value :PhaseCodeKind_AN, 129
      value :PhaseCodeKind_AB, 132
      value :PhaseCodeKind_ABN, 193
      value :PhaseCodeKind_ABC, 224
      value :PhaseCodeKind_ABCN, 225
      value :PhaseCodeKind_s2, 256
      value :PhaseCodeKind_s2N, 257
      value :PhaseCodeKind_s1, 512
      value :PhaseCodeKind_s1N, 513
      value :PhaseCodeKind_s12, 768
      value :PhaseCodeKind_s12N, 769
    end
    add_enum "commonmodule.ValidityKind" do
      value :ValidityKind_UNDEFINED, 0
      value :ValidityKind_good, 1
      value :ValidityKind_invalid, 2
      value :ValidityKind_reserved, 3
      value :ValidityKind_questionable, 4
    end
    add_enum "commonmodule.SourceKind" do
      value :SourceKind_UNDEFINED, 0
      value :SourceKind_process, 1
      value :SourceKind_substituted, 2
    end
    add_enum "commonmodule.TimeAccuracyKind" do
      value :TimeAccuracyKind_UNDEFINED, 0
      value :TimeAccuracyKind_T0, 7
      value :TimeAccuracyKind_T1, 10
      value :TimeAccuracyKind_T2, 14
      value :TimeAccuracyKind_T3, 16
      value :TimeAccuracyKind_T4, 18
      value :TimeAccuracyKind_T5, 20
      value :TimeAccuracyKind_unspecified, 31
    end
    add_enum "commonmodule.ScheduleParameterKind" do
      value :ScheduleParameterKind_UNDEFINED, 0
      value :ScheduleParameterKind_none, 1
      value :ScheduleParameterKind_other, 2
      value :ScheduleParameterKind_A_net_mag, 3
      value :ScheduleParameterKind_A_neut_mag, 4
      value :ScheduleParameterKind_A_phsA_mag, 5
      value :ScheduleParameterKind_A_phsB_mag, 6
      value :ScheduleParameterKind_A_phsC_mag, 7
      value :ScheduleParameterKind_Hz_mag, 8
      value :ScheduleParameterKind_PF_net_mag, 9
      value :ScheduleParameterKind_PF_neut_mag, 10
      value :ScheduleParameterKind_PF_phsA_mag, 11
      value :ScheduleParameterKind_PF_phsB_mag, 12
      value :ScheduleParameterKind_PF_phsC_mag, 13
      value :ScheduleParameterKind_PhV_net_ang, 14
      value :ScheduleParameterKind_PhV_net_mag, 15
      value :ScheduleParameterKind_PhV_neut_ang, 16
      value :ScheduleParameterKind_PhV_neut_mag, 17
      value :ScheduleParameterKind_PhV_phsA_ang, 18
      value :ScheduleParameterKind_PhV_phsA_mag, 19
      value :ScheduleParameterKind_PhV_phsB_ang, 20
      value :ScheduleParameterKind_PhV_phsB_mag, 21
      value :ScheduleParameterKind_PhV_phsC_ang, 22
      value :ScheduleParameterKind_PhV_phsC_mag, 23
      value :ScheduleParameterKind_PPV_phsAB_ang, 24
      value :ScheduleParameterKind_PPV_phsAB_mag, 25
      value :ScheduleParameterKind_PPV_phsBC_ang, 26
      value :ScheduleParameterKind_PPV_phsBC_mag, 27
      value :ScheduleParameterKind_PPV_phsCA_ang, 28
      value :ScheduleParameterKind_PPV_phsCA_mag, 29
      value :ScheduleParameterKind_VA_net_mag, 30
      value :ScheduleParameterKind_VA_neut_mag, 31
      value :ScheduleParameterKind_VA_phsA_mag, 32
      value :ScheduleParameterKind_VA_phsB_mag, 33
      value :ScheduleParameterKind_VA_phsC_mag, 34
      value :ScheduleParameterKind_VAr_net_mag, 35
      value :ScheduleParameterKind_VAr_neut_mag, 36
      value :ScheduleParameterKind_VAr_phsA_mag, 37
      value :ScheduleParameterKind_VAr_phsB_mag, 38
      value :ScheduleParameterKind_VAr_phsC_mag, 39
      value :ScheduleParameterKind_W_net_mag, 40
      value :ScheduleParameterKind_W_neut_mag, 41
      value :ScheduleParameterKind_W_phsA_mag, 42
      value :ScheduleParameterKind_W_phsB_mag, 43
      value :ScheduleParameterKind_W_phsC_mag, 44
    end
    add_enum "commonmodule.CalcMethodKind" do
      value :CalcMethodKind_UNDEFINED, 0
      value :CalcMethodKind_P_CLASS, 11
      value :CalcMethodKind_M_CLASS, 12
      value :CalcMethodKind_DIFF, 13
    end
    add_enum "commonmodule.GridConnectModeKind" do
      value :GridConnectModeKind_UNDEFINED, 0
      value :GridConnectModeKind_CSI, 1
      value :GridConnectModeKind_VC_VSI, 2
      value :GridConnectModeKind_CC_VSI, 3
      value :GridConnectModeKind_none, 98
      value :GridConnectModeKind_other, 99
      value :GridConnectModeKind_VSI_PQ, 2000
      value :GridConnectModeKind_VSI_VF, 2001
      value :GridConnectModeKind_VSI_ISO, 2002
    end
    add_enum "commonmodule.PFSignKind" do
      value :PFSignKind_UNDEFINED, 0
      value :PFSignKind_IEC, 1
      value :PFSignKind_EEI, 2
    end
    add_enum "commonmodule.BehaviourModeKind" do
      value :BehaviourModeKind_UNDEFINED, 0
      value :BehaviourModeKind_on, 1
      value :BehaviourModeKind_blocked, 2
      value :BehaviourModeKind_test, 3
      value :BehaviourModeKind_test_blocked, 4
      value :BehaviourModeKind_off, 5
    end
    add_enum "commonmodule.DERGeneratorStateKind" do
      value :DERGeneratorStateKind_UNDEFINED, 0
      value :DERGeneratorStateKind_Not_operating, 1
      value :DERGeneratorStateKind_Operating, 2
      value :DERGeneratorStateKind_Starting_up, 3
      value :DERGeneratorStateKind_Shutting_down, 4
      value :DERGeneratorStateKind_At_disconnect_level, 5
      value :DERGeneratorStateKind_Ramping_in_power, 6
      value :DERGeneratorStateKind_Ramping_in_reactive_power, 7
      value :DERGeneratorStateKind_Standby, 8
      value :DERGeneratorStateKind_Not_applicable_Unknown, 98
      value :DERGeneratorStateKind_Other, 99
    end
    add_enum "commonmodule.DynamicTestKind" do
      value :DynamicTestKind_UNDEFINED, 0
      value :DynamicTestKind_none, 1
      value :DynamicTestKind_testing, 2
      value :DynamicTestKind_operating, 3
      value :DynamicTestKind_failed, 4
    end
    add_enum "commonmodule.HealthKind" do
      value :HealthKind_UNDEFINED, 0
      value :HealthKind_none, 1
      value :HealthKind_OK, 2
      value :HealthKind_Warning, 3
      value :HealthKind_Alarm, 4
    end
    add_enum "commonmodule.SwitchingCapabilityKind" do
      value :SwitchingCapabilityKind_UNDEFINED, 0
      value :SwitchingCapabilityKind_none, 1
      value :SwitchingCapabilityKind_open, 2
      value :SwitchingCapabilityKind_close, 3
      value :SwitchingCapabilityKind_open_and_close, 4
    end
    add_enum "commonmodule.DbPosKind" do
      value :DbPosKind_UNDEFINED, 0
      value :DbPosKind_transient, 1
      value :DbPosKind_closed, 2
      value :DbPosKind_open, 3
      value :DbPosKind_invalid, 4
    end
    add_enum "commonmodule.RecloseActionKind" do
      value :RecloseActionKind_UNDEFINED, 0
      value :RecloseActionKind_idle, 1
      value :RecloseActionKind_cycling, 2
      value :RecloseActionKind_lockout, 3
    end
    add_enum "commonmodule.NorOpCatKind" do
      value :NorOpCatKind_UNDEFINED, 0
      value :NorOpCatKind_A, 1
      value :NorOpCatKind_B, 2
    end
    add_enum "commonmodule.AbnOpCatKind" do
      value :AbnOpCatKind_UNDEFINED, 0
      value :AbnOpCatKind_I, 1
      value :AbnOpCatKind_II, 2
      value :AbnOpCatKind_III, 3
    end
    add_enum "commonmodule.AlrmKind" do
      value :AlrmKind_ground_fault, 0
      value :AlrmKind_dc_over_voltage, 1
      value :AlrmKind_ac_disconnect_open, 2
      value :AlrmKind_dc_disconnect_open, 3
      value :AlrmKind_grid_disconnect, 4
      value :AlrmKind_cabinet_open, 5
      value :AlrmKind_manual_shutdown, 6
      value :AlrmKind_over_temperature, 7
      value :AlrmKind_frequency_above_limit, 8
      value :AlrmKind_frequency_under_limit, 9
      value :AlrmKind_ac_voltage_above_limit, 10
      value :AlrmKind_ac_voltage_under_limit, 11
      value :AlrmKind_blown_string_fuse_on_input, 12
      value :AlrmKind_under_temperature, 13
      value :AlrmKind_generic_memory_or_communication_error, 14
      value :AlrmKind_hardware_test_failure, 15
      value :AlrmKind_manufacturer_alarm, 16
    end
    add_enum "commonmodule.ControlModeKind" do
      value :ControlModeKind_UNDEFINED, 0
      value :ControlModeKind_auto, 1
      value :ControlModeKind_manual, 2
      value :ControlModeKind_override, 3
      value :ControlModeKind_remote, 4
    end
    add_enum "commonmodule.DirectionModeKind" do
      value :DirectionModeKind_UNDEFINED, 0
      value :DirectionModeKind_locked_forward, 1
      value :DirectionModeKind_locked_reverse, 2
      value :DirectionModeKind_reverse_idle, 3
      value :DirectionModeKind_bidirectional, 4
      value :DirectionModeKind_neutral_idle, 5
      value :DirectionModeKind_cogeneration, 6
      value :DirectionModeKind_reactive_bidirectional, 7
      value :DirectionModeKind_bias_bidirectional, 8
      value :DirectionModeKind_bias_cogeneration, 9
      value :DirectionModeKind_reverse_cogeneration, 10
    end
    add_enum "commonmodule.GridConnectionStateKind" do
      value :GridConnectionStateKind_disconnected, 0
      value :GridConnectionStateKind_connected, 1
    end
    add_enum "commonmodule.OperatingStateKind" do
      value :OperatingStateKind_UNDEFINED, 0
      value :OperatingStateKind_off, 1
      value :OperatingStateKind_disconnected_and_standby, 2
      value :OperatingStateKind_disconnected_and_available, 3
      value :OperatingStateKind_disconnected_and_authorized, 4
      value :OperatingStateKind_starting_and_synchronizing, 5
      value :OperatingStateKind_connected_and_idle, 6
      value :OperatingStateKind_connected_and_generating, 7
      value :OperatingStateKind_connected_and_consuming, 8
      value :OperatingStateKind_stopping, 9
      value :OperatingStateKind_disconnected_and_blocked, 10
      value :OperatingStateKind_disconnected_and_in_maintenance, 11
      value :OperatingStateKind_ceased_to_energize, 12
      value :OperatingStateKind_failed, 13
    end
    add_enum "commonmodule.ReactivePowerControlKind" do
      value :ReactivePowerControlKind_UNDEFINED, 0
      value :ReactivePowerControlKind_advanced, 1
      value :ReactivePowerControlKind_droop, 2
      value :ReactivePowerControlKind_voltage, 3
      value :ReactivePowerControlKind_reactivePower, 4
      value :ReactivePowerControlKind_powerFactor, 5
    end
    add_enum "commonmodule.RealPowerControlKind" do
      value :RealPowerControlKind_UNDEFINED, 0
      value :RealPowerControlKind_advanced, 1
      value :RealPowerControlKind_droop, 2
      value :RealPowerControlKind_isochronous, 3
      value :RealPowerControlKind_realPower, 4
    end
    add_enum "commonmodule.StateKind" do
      value :StateKind_UNDEFINED, 0
      value :StateKind_off, 1
      value :StateKind_on, 2
      value :StateKind_standby, 3
    end
    add_enum "commonmodule.VoltLimitModeKind" do
      value :VoltLimitModeKind_UNDEFINED, 0
      value :VoltLimitModeKind_off, 1
      value :VoltLimitModeKind_high_limit_only, 2
      value :VoltLimitModeKind_low_limit_only, 3
      value :VoltLimitModeKind_high_low_limits, 4
      value :VoltLimitModeKind_ivvc_high_limit_only, 5
      value :VoltLimitModeKind_ivvc_low_limit_only, 6
      value :VoltLimitModeKind_ivvc_high_low_limits, 7
    end
  end
end

module Commonmodule
  Optional_FaultDirectionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_FaultDirectionKind").msgclass
  Optional_PhaseFaultDirectionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_PhaseFaultDirectionKind").msgclass
  ACD = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ACD").msgclass
  IdentifiedObject = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.IdentifiedObject").msgclass
  ACDCTerminal = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ACDCTerminal").msgclass
  Optional_UnitSymbolKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_UnitSymbolKind").msgclass
  Optional_UnitMultiplierKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_UnitMultiplierKind").msgclass
  ActivePower = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ActivePower").msgclass
  Optional_PhaseCodeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_PhaseCodeKind").msgclass
  Unit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Unit").msgclass
  Optional_ValidityKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_ValidityKind").msgclass
  DetailQual = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DetailQual").msgclass
  Optional_SourceKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_SourceKind").msgclass
  Quality = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Quality").msgclass
  Optional_TimeAccuracyKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_TimeAccuracyKind").msgclass
  TimeQuality = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.TimeQuality").msgclass
  Timestamp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Timestamp").msgclass
  MV = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.MV").msgclass
  LogicalNode = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.LogicalNode").msgclass
  AnalogEventAndStatusGGIO = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.AnalogEventAndStatusGGIO").msgclass
  NamedObject = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.NamedObject").msgclass
  ApplicationSystem = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ApplicationSystem").msgclass
  ASG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ASG").msgclass
  BCR = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.BCR").msgclass
  StatusSPS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusSPS").msgclass
  BooleanEventAndStatusGGIO = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.BooleanEventAndStatusGGIO").msgclass
  MessageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.MessageInfo").msgclass
  CapabilityMessageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.CapabilityMessageInfo").msgclass
  CheckConditions = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.CheckConditions").msgclass
  ClearingTime = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ClearingTime").msgclass
  Vector = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Vector").msgclass
  CMV = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.CMV").msgclass
  ConductingEquipment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ConductingEquipment").msgclass
  Terminal = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Terminal").msgclass
  ConductingEquipmentTerminalReading = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ConductingEquipmentTerminalReading").msgclass
  ControlAPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlAPC").msgclass
  ControlDPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlDPC").msgclass
  ControlTimestamp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlTimestamp").msgclass
  Optional_ScheduleParameterKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_ScheduleParameterKind").msgclass
  ENG_ScheduleParameter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENG_ScheduleParameter").msgclass
  SchedulePoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.SchedulePoint").msgclass
  ScheduleCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ScheduleCSG").msgclass
  ControlScheduleFSCH = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlScheduleFSCH").msgclass
  LogicalNodeForControl = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.LogicalNodeForControl").msgclass
  ControlFSCC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlFSCC").msgclass
  ControlINC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlINC").msgclass
  ControlING = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlING").msgclass
  ControlISC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlISC").msgclass
  ControlMessageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlMessageInfo").msgclass
  ControlSPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlSPC").msgclass
  ControlValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlValue").msgclass
  CumulativeTime = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.CumulativeTime").msgclass
  DateTimeInterval = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DateTimeInterval").msgclass
  DEL = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DEL").msgclass
  PhaseDPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseDPC").msgclass
  DiscreteControlXCBR = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DiscreteControlXCBR").msgclass
  EnergyConsumer = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.EnergyConsumer").msgclass
  Optional_CalcMethodKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_CalcMethodKind").msgclass
  ENG_CalcMethodKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENG_CalcMethodKind").msgclass
  Optional_GridConnectModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_GridConnectModeKind").msgclass
  ENG_GridConnectModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENG_GridConnectModeKind").msgclass
  Optional_PFSignKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_PFSignKind").msgclass
  ENG_PFSignKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENG_PFSignKind").msgclass
  Optional_BehaviourModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_BehaviourModeKind").msgclass
  ENS_BehaviourModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENS_BehaviourModeKind").msgclass
  Optional_DERGeneratorStateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_DERGeneratorStateKind").msgclass
  ENS_DERGeneratorStateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENS_DERGeneratorStateKind").msgclass
  Optional_DynamicTestKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_DynamicTestKind").msgclass
  ENS_DynamicTestKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENS_DynamicTestKind").msgclass
  ENS_GridConnectModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENS_GridConnectModeKind").msgclass
  Optional_HealthKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_HealthKind").msgclass
  ENS_HealthKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENS_HealthKind").msgclass
  Optional_SwitchingCapabilityKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_SwitchingCapabilityKind").msgclass
  ENS_SwitchingCapabilityKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ENS_SwitchingCapabilityKind").msgclass
  OperationDCTE = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDCTE").msgclass
  EnterServiceAPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.EnterServiceAPC").msgclass
  ESS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ESS").msgclass
  EventMessageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.EventMessageInfo").msgclass
  EventValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.EventValue").msgclass
  ForecastValueSource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ForecastValueSource").msgclass
  ForecastIED = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ForecastIED").msgclass
  ForecastValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ForecastValue").msgclass
  OperationDHFW = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDHFW").msgclass
  OperationDLFW = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDLFW").msgclass
  HzWPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.HzWPoint").msgclass
  HzWAPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.HzWAPC").msgclass
  StatusINS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusINS").msgclass
  IntegerEventAndStatusGGIO = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.IntegerEventAndStatusGGIO").msgclass
  OperationDWMX = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDWMX").msgclass
  OperationDWMN = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDWMN").msgclass
  LimitWAPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.LimitWAPC").msgclass
  LogicalNodeForEventAndStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.LogicalNodeForEventAndStatus").msgclass
  MeasurementValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.MeasurementValue").msgclass
  Meter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Meter").msgclass
  NameplateValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.NameplateValue").msgclass
  OperationDFPF = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDFPF").msgclass
  OperationDVAR = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDVAR").msgclass
  OperationDVVR = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDVVR").msgclass
  OperationDVWC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDVWC").msgclass
  OperationDWGC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDWGC").msgclass
  OperationDWVR = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperationDWVR").msgclass
  OptimizationMessageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OptimizationMessageInfo").msgclass
  PFSPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PFSPC").msgclass
  PhaseAPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseAPC").msgclass
  Optional_DbPosKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_DbPosKind").msgclass
  StatusDPS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusDPS").msgclass
  PhaseDPS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseDPS").msgclass
  PhaseINS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseINS").msgclass
  PhaseISC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseISC").msgclass
  ReadingMMTN = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ReadingMMTN").msgclass
  PhaseMMTN = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseMMTN").msgclass
  Optional_RecloseActionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_RecloseActionKind").msgclass
  PhaseRecloseAction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseRecloseAction").msgclass
  PhaseSPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseSPC").msgclass
  PhaseSPS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseSPS").msgclass
  PMG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PMG").msgclass
  RampRate = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.RampRate").msgclass
  ReadingMessageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ReadingMessageInfo").msgclass
  ReadingMMTR = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ReadingMMTR").msgclass
  WYE = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.WYE").msgclass
  ReadingMMXU = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ReadingMMXU").msgclass
  SourceCapabilityConfiguration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.SourceCapabilityConfiguration").msgclass
  Optional_NorOpCatKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_NorOpCatKind").msgclass
  Optional_AbnOpCatKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_AbnOpCatKind").msgclass
  SourceCapabilityRatings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.SourceCapabilityRatings").msgclass
  StatusAndEventXCBR = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusAndEventXCBR").msgclass
  StatusINC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusINC").msgclass
  StatusISC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusISC").msgclass
  StatusMessageInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusMessageInfo").msgclass
  StatusValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StatusValue").msgclass
  VSS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VSS").msgclass
  StringEventAndStatusGGIO = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StringEventAndStatusGGIO").msgclass
  SwitchPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.SwitchPoint").msgclass
  SwitchCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.SwitchCSG").msgclass
  TmHzPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.TmHzPoint").msgclass
  TmHzCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.TmHzCSG").msgclass
  TmVoltPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.TmVoltPoint").msgclass
  TmVoltCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.TmVoltCSG").msgclass
  VarSPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VarSPC").msgclass
  VoltVarPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VoltVarPoint").msgclass
  VoltVarCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VoltVarCSG").msgclass
  VoltWPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VoltWPoint").msgclass
  VoltWCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VoltWCSG").msgclass
  VSC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VSC").msgclass
  WSPC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.WSPC").msgclass
  WVarPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.WVarPoint").msgclass
  WVarCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.WVarCSG").msgclass
  Optional_AlrmKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_AlrmKind").msgclass
  Optional_ControlModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_ControlModeKind").msgclass
  Optional_DirectionModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_DirectionModeKind").msgclass
  Optional_GridConnectionStateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_GridConnectionStateKind").msgclass
  Optional_OperatingStateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_OperatingStateKind").msgclass
  Optional_ReactivePowerControlKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_ReactivePowerControlKind").msgclass
  Optional_RealPowerControlKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_RealPowerControlKind").msgclass
  Optional_StateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_StateKind").msgclass
  Optional_VoltLimitModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.Optional_VoltLimitModeKind").msgclass
  FaultDirectionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.FaultDirectionKind").enummodule
  PhaseFaultDirectionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseFaultDirectionKind").enummodule
  UnitSymbolKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.UnitSymbolKind").enummodule
  UnitMultiplierKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.UnitMultiplierKind").enummodule
  PhaseCodeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PhaseCodeKind").enummodule
  ValidityKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ValidityKind").enummodule
  SourceKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.SourceKind").enummodule
  TimeAccuracyKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.TimeAccuracyKind").enummodule
  ScheduleParameterKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ScheduleParameterKind").enummodule
  CalcMethodKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.CalcMethodKind").enummodule
  GridConnectModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.GridConnectModeKind").enummodule
  PFSignKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.PFSignKind").enummodule
  BehaviourModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.BehaviourModeKind").enummodule
  DERGeneratorStateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DERGeneratorStateKind").enummodule
  DynamicTestKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DynamicTestKind").enummodule
  HealthKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.HealthKind").enummodule
  SwitchingCapabilityKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.SwitchingCapabilityKind").enummodule
  DbPosKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DbPosKind").enummodule
  RecloseActionKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.RecloseActionKind").enummodule
  NorOpCatKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.NorOpCatKind").enummodule
  AbnOpCatKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.AbnOpCatKind").enummodule
  AlrmKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.AlrmKind").enummodule
  ControlModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ControlModeKind").enummodule
  DirectionModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.DirectionModeKind").enummodule
  GridConnectionStateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.GridConnectionStateKind").enummodule
  OperatingStateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.OperatingStateKind").enummodule
  ReactivePowerControlKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.ReactivePowerControlKind").enummodule
  RealPowerControlKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.RealPowerControlKind").enummodule
  StateKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.StateKind").enummodule
  VoltLimitModeKind = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("commonmodule.VoltLimitModeKind").enummodule
end
