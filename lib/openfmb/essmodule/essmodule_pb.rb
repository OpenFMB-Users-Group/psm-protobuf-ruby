# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: essmodule/essmodule.proto

require 'google/protobuf'

require 'uml_pb'
require 'google/protobuf/wrappers_pb'
require 'commonmodule/commonmodule_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("essmodule/essmodule.proto", :syntax => :proto3) do
    add_message "essmodule.ESSCapabilityConfiguration" do
      optional :sourceCapabilityConfiguration, :message, 1, "commonmodule.SourceCapabilityConfiguration"
      optional :VAChaRteMax, :message, 2, "commonmodule.ASG"
      optional :VADisChaRteMax, :message, 3, "commonmodule.ASG"
      optional :WChaRteMax, :message, 4, "commonmodule.ASG"
      optional :WDisChaRteMax, :message, 5, "commonmodule.ASG"
    end
    add_message "essmodule.ESSCapabilityOverride" do
      optional :nameplateValue, :message, 1, "commonmodule.NameplateValue"
      optional :essCapabilityConfiguration, :message, 2, "essmodule.ESSCapabilityConfiguration"
    end
    add_message "essmodule.ESSCapabilityOverrideProfile" do
      optional :capabilityMessageInfo, :message, 1, "commonmodule.CapabilityMessageInfo"
      optional :ess, :message, 2, "commonmodule.ESS"
      optional :essCapabilityOverride, :message, 3, "essmodule.ESSCapabilityOverride"
    end
    add_message "essmodule.ESSCapabilityRatings" do
      optional :sourceCapabilityRatings, :message, 1, "commonmodule.SourceCapabilityRatings"
      optional :VAChaRteMaxRtg, :message, 2, "commonmodule.ASG"
      optional :VADisChaRteMaxRtg, :message, 3, "commonmodule.ASG"
      optional :WChaRteMaxRtg, :message, 4, "commonmodule.ASG"
      optional :WDisChaRteMaxRtg, :message, 5, "commonmodule.ASG"
      optional :WHRtg, :message, 6, "commonmodule.ASG"
    end
    add_message "essmodule.ESSCapability" do
      optional :nameplateValue, :message, 1, "commonmodule.NameplateValue"
      optional :essCapabilityRatings, :message, 2, "essmodule.ESSCapabilityRatings"
      optional :essCapabilityConfiguration, :message, 3, "essmodule.ESSCapabilityConfiguration"
    end
    add_message "essmodule.ESSCapabilityProfile" do
      optional :capabilityMessageInfo, :message, 1, "commonmodule.CapabilityMessageInfo"
      optional :ess, :message, 2, "commonmodule.ESS"
      optional :essCapability, :message, 3, "essmodule.ESSCapability"
    end
    add_message "essmodule.FrequencyRegulation" do
      optional :frequencyDeadBandMinus, :message, 1, "google.protobuf.FloatValue"
      optional :frequencyDeadBandPlus, :message, 2, "google.protobuf.FloatValue"
      optional :frequencyRegulationCtl, :message, 3, "google.protobuf.BoolValue"
      optional :frequencySetPoint, :message, 4, "google.protobuf.FloatValue"
      optional :gridFrequencyStableBandMinus, :message, 5, "google.protobuf.FloatValue"
      optional :gridFrequencyStableBandPlus, :message, 6, "google.protobuf.FloatValue"
      optional :overFrequencyDroop, :message, 7, "google.protobuf.FloatValue"
      optional :underFrequencyDroop, :message, 8, "google.protobuf.FloatValue"
    end
    add_message "essmodule.PeakShaving" do
      optional :baseShavingLimit, :message, 1, "google.protobuf.FloatValue"
      optional :peakShavingCtl, :message, 2, "google.protobuf.BoolValue"
      optional :peakShavingLimit, :message, 3, "google.protobuf.FloatValue"
      optional :socManagementAllowedHighLimit, :message, 4, "google.protobuf.FloatValue"
      optional :socManagementAllowedLowLimit, :message, 5, "google.protobuf.FloatValue"
    end
    add_message "essmodule.SocLimit" do
      optional :socHighLimit, :message, 1, "google.protobuf.FloatValue"
      optional :socHighLimitHysteresis, :message, 2, "google.protobuf.FloatValue"
      optional :socLimitCtl, :message, 3, "google.protobuf.BoolValue"
      optional :socLowLimit, :message, 4, "google.protobuf.FloatValue"
      optional :socLowLimitHysteresis, :message, 5, "google.protobuf.FloatValue"
    end
    add_message "essmodule.SOCManagement" do
      optional :socDeadBandMinus, :message, 1, "google.protobuf.FloatValue"
      optional :socDeadBandPlus, :message, 2, "google.protobuf.FloatValue"
      optional :socManagementCtl, :message, 3, "google.protobuf.BoolValue"
      optional :socPowerSetPoint, :message, 4, "google.protobuf.FloatValue"
      optional :socSetPoint, :message, 5, "google.protobuf.FloatValue"
    end
    add_message "essmodule.VoltageRegulation" do
      optional :overVoltageDroop, :message, 1, "google.protobuf.FloatValue"
      optional :underVoltageDroop, :message, 2, "google.protobuf.FloatValue"
      optional :voltageDeadBandMinus, :message, 3, "google.protobuf.FloatValue"
      optional :voltageDeadBandPlus, :message, 4, "google.protobuf.FloatValue"
      optional :voltageSetPoint, :message, 5, "google.protobuf.FloatValue"
    end
    add_message "essmodule.VoltageDroop" do
      optional :voltageDroopCtl, :message, 1, "google.protobuf.BoolValue"
      optional :voltageRegulation, :message, 2, "essmodule.VoltageRegulation"
    end
    add_message "essmodule.VoltagePI" do
      optional :voltagePICtl, :message, 1, "google.protobuf.BoolValue"
      optional :voltageRegulation, :message, 2, "essmodule.VoltageRegulation"
    end
    add_message "essmodule.CapacityFirming" do
      optional :capacityFirmingCtl, :message, 1, "google.protobuf.BoolValue"
      optional :limitNegative_dp_dt, :message, 2, "google.protobuf.FloatValue"
      optional :limitPositive_dp_dt, :message, 3, "google.protobuf.FloatValue"
    end
    add_message "essmodule.ESSFunction" do
      optional :capacityFirming, :message, 1, "essmodule.CapacityFirming"
      optional :frequencyRegulation, :message, 2, "essmodule.FrequencyRegulation"
      optional :peakShaving, :message, 3, "essmodule.PeakShaving"
      optional :socLimit, :message, 4, "essmodule.SocLimit"
      optional :socManagement, :message, 5, "essmodule.SOCManagement"
      optional :voltageDroop, :message, 6, "essmodule.VoltageDroop"
      optional :voltagePI, :message, 7, "essmodule.VoltagePI"
    end
    add_message "essmodule.ESSPoint" do
      optional :blackStartEnabled, :message, 1, "commonmodule.ControlSPC"
      optional :function, :message, 3, "essmodule.ESSFunction"
      optional :mode, :message, 4, "commonmodule.ENG_GridConnectModeKind"
      optional :rampRates, :message, 7, "commonmodule.RampRate"
      optional :reset, :message, 10, "commonmodule.ControlSPC"
      optional :state, :message, 11, "commonmodule.Optional_StateKind"
      optional :transToIslndOnGridLossEnabled, :message, 13, "commonmodule.ControlSPC"
      optional :enterServiceOperation, :message, 16, "commonmodule.EnterServiceAPC"
      optional :hzWOperation, :message, 17, "commonmodule.HzWAPC"
      optional :limitWOperation, :message, 18, "commonmodule.LimitWAPC"
      optional :pFOperation, :message, 19, "commonmodule.PFSPC"
      optional :tmHzTripOperation, :message, 20, "commonmodule.TmHzCSG"
      optional :tmVoltTripOperation, :message, 21, "commonmodule.TmVoltCSG"
      optional :vArOperation, :message, 22, "commonmodule.VarSPC"
      optional :voltVarOperation, :message, 23, "commonmodule.VoltVarCSG"
      optional :voltWOperation, :message, 24, "commonmodule.VoltWCSG"
      optional :wVarOperation, :message, 25, "commonmodule.WVarCSG"
      optional :wOperation, :message, 26, "commonmodule.WSPC"
    end
    add_message "essmodule.ESSCurvePoint" do
      optional :control, :message, 1, "essmodule.ESSPoint"
      optional :startTime, :message, 2, "commonmodule.ControlTimestamp"
    end
    add_message "essmodule.ESSCSG" do
      repeated :crvPts, :message, 1, "essmodule.ESSCurvePoint"
    end
    add_message "essmodule.ESSControlScheduleFSCH" do
      optional :ValDCSG, :message, 1, "essmodule.ESSCSG"
    end
    add_message "essmodule.EssControlFSCC" do
      optional :controlFSCC, :message, 1, "commonmodule.ControlFSCC"
      optional :essControlScheduleFSCH, :message, 2, "essmodule.ESSControlScheduleFSCH"
    end
    add_message "essmodule.ESSControl" do
      optional :controlValue, :message, 1, "commonmodule.ControlValue"
      optional :check, :message, 2, "commonmodule.CheckConditions"
      optional :essControlFSCC, :message, 3, "essmodule.EssControlFSCC"
    end
    add_message "essmodule.ESSControlProfile" do
      optional :controlMessageInfo, :message, 1, "commonmodule.ControlMessageInfo"
      optional :ess, :message, 2, "commonmodule.ESS"
      optional :essControl, :message, 3, "essmodule.ESSControl"
    end
    add_message "essmodule.ESSDiscreteControlDBAT" do
      optional :logicalNodeForControl, :message, 1, "commonmodule.LogicalNodeForControl"
      optional :control, :message, 2, "essmodule.ESSPoint"
    end
    add_message "essmodule.ESSDiscreteControl" do
      optional :controlValue, :message, 1, "commonmodule.ControlValue"
      optional :check, :message, 2, "commonmodule.CheckConditions"
      optional :essDiscreteControlDBAT, :message, 3, "essmodule.ESSDiscreteControlDBAT"
    end
    add_message "essmodule.ESSDiscreteControlProfile" do
      optional :controlMessageInfo, :message, 1, "commonmodule.ControlMessageInfo"
      optional :ess, :message, 2, "commonmodule.ESS"
      optional :essDiscreteControl, :message, 3, "essmodule.ESSDiscreteControl"
    end
    add_message "essmodule.EssEventZBAT" do
      optional :logicalNodeForEventAndStatus, :message, 1, "commonmodule.LogicalNodeForEventAndStatus"
      optional :BatHi, :message, 2, "commonmodule.StatusSPS"
      optional :BatLo, :message, 3, "commonmodule.StatusSPS"
      optional :BatSt, :message, 4, "commonmodule.StatusSPS"
      optional :Soc, :message, 5, "commonmodule.MV"
      optional :Stdby, :message, 6, "commonmodule.StatusSPS"
      optional :SoH, :message, 7, "commonmodule.MV"
      optional :WHAvail, :message, 8, "commonmodule.MV"
    end
    add_message "essmodule.ESSPointStatus" do
      optional :blackStartEnabled, :message, 1, "commonmodule.StatusSPS"
      optional :frequencySetPointEnabled, :message, 2, "commonmodule.StatusSPS"
      optional :function, :message, 3, "essmodule.ESSFunction"
      optional :mode, :message, 4, "commonmodule.ENG_GridConnectModeKind"
      optional :pctHzDroop, :message, 5, "google.protobuf.FloatValue"
      optional :pctVDroop, :message, 6, "google.protobuf.FloatValue"
      optional :rampRates, :message, 7, "commonmodule.RampRate"
      optional :reactivePwrSetPointEnabled, :message, 8, "commonmodule.StatusSPS"
      optional :realPwrSetPointEnabled, :message, 9, "commonmodule.StatusSPS"
      optional :state, :message, 10, "commonmodule.Optional_StateKind"
      optional :syncBackToGrid, :message, 11, "commonmodule.StatusSPS"
      optional :transToIslndOnGridLossEnabled, :message, 12, "commonmodule.StatusSPS"
      optional :voltageSetPointEnabled, :message, 13, "commonmodule.StatusSPS"
      optional :enterServiceOperation, :message, 14, "commonmodule.EnterServiceAPC"
      optional :hzWOperation, :message, 15, "commonmodule.HzWAPC"
      optional :limitWOperation, :message, 16, "commonmodule.LimitWAPC"
      optional :pFOperation, :message, 17, "commonmodule.PFSPC"
      optional :tmHzTripOperation, :message, 18, "commonmodule.TmHzCSG"
      optional :tmVoltTripOperation, :message, 19, "commonmodule.TmVoltCSG"
      optional :vArOperation, :message, 20, "commonmodule.VarSPC"
      optional :voltVarOperation, :message, 21, "commonmodule.VoltVarCSG"
      optional :voltWOperation, :message, 22, "commonmodule.VoltWCSG"
      optional :wVarOperation, :message, 23, "commonmodule.WVarCSG"
    end
    add_message "essmodule.ESSEventAndStatusZGEN" do
      optional :logicalNodeForEventAndStatus, :message, 1, "commonmodule.LogicalNodeForEventAndStatus"
      optional :AuxPwrSt, :message, 2, "commonmodule.StatusSPS"
      optional :DynamicTest, :message, 3, "commonmodule.ENS_DynamicTestKind"
      optional :EmgStop, :message, 4, "commonmodule.StatusSPS"
      optional :GnSynSt, :message, 5, "commonmodule.StatusSPS"
      optional :PointStatus, :message, 6, "essmodule.ESSPointStatus"
    end
    add_message "essmodule.ESSEventZGEN" do
      optional :eSSEventAndStatusZGEN, :message, 1, "essmodule.ESSEventAndStatusZGEN"
    end
    add_message "essmodule.ESSEvent" do
      optional :eventValue, :message, 1, "commonmodule.EventValue"
      optional :essEventZBAT, :message, 2, "essmodule.EssEventZBAT"
      optional :essEventZGEN, :message, 3, "essmodule.ESSEventZGEN"
    end
    add_message "essmodule.ESSEventProfile" do
      optional :eventMessageInfo, :message, 1, "commonmodule.EventMessageInfo"
      optional :ess, :message, 2, "commonmodule.ESS"
      optional :essEvent, :message, 3, "essmodule.ESSEvent"
    end
    add_message "essmodule.ESSReading" do
      optional :conductingEquipmentTerminalReading, :message, 1, "commonmodule.ConductingEquipmentTerminalReading"
      optional :phaseMMTN, :message, 2, "commonmodule.PhaseMMTN"
      optional :readingMMTR, :message, 3, "commonmodule.ReadingMMTR"
      optional :readingMMXU, :message, 4, "commonmodule.ReadingMMXU"
    end
    add_message "essmodule.ESSReadingProfile" do
      optional :readingMessageInfo, :message, 1, "commonmodule.ReadingMessageInfo"
      optional :ess, :message, 2, "commonmodule.ESS"
      optional :essReading, :message, 3, "essmodule.ESSReading"
    end
    add_message "essmodule.EssStatusZBAT" do
      optional :logicalNodeForEventAndStatus, :message, 1, "commonmodule.LogicalNodeForEventAndStatus"
      optional :BatSt, :message, 2, "commonmodule.StatusSPS"
      optional :GriMod, :message, 3, "commonmodule.ENG_GridConnectModeKind"
      optional :Soc, :message, 4, "commonmodule.MV"
      optional :Stdby, :message, 5, "commonmodule.StatusSPS"
      optional :SoH, :message, 6, "commonmodule.MV"
      optional :WHAvail, :message, 7, "commonmodule.MV"
    end
    add_message "essmodule.ESSStatusZGEN" do
      optional :eSSEventAndStatusZGEN, :message, 1, "essmodule.ESSEventAndStatusZGEN"
    end
    add_message "essmodule.ESSStatus" do
      optional :statusValue, :message, 1, "commonmodule.StatusValue"
      optional :essStatusZBAT, :message, 2, "essmodule.EssStatusZBAT"
      optional :essStatusZGEN, :message, 3, "essmodule.ESSStatusZGEN"
    end
    add_message "essmodule.ESSStatusProfile" do
      optional :statusMessageInfo, :message, 1, "commonmodule.StatusMessageInfo"
      optional :ess, :message, 2, "commonmodule.ESS"
      optional :essStatus, :message, 3, "essmodule.ESSStatus"
    end
  end
end

module Essmodule
  ESSCapabilityConfiguration = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCapabilityConfiguration").msgclass
  ESSCapabilityOverride = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCapabilityOverride").msgclass
  ESSCapabilityOverrideProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCapabilityOverrideProfile").msgclass
  ESSCapabilityRatings = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCapabilityRatings").msgclass
  ESSCapability = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCapability").msgclass
  ESSCapabilityProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCapabilityProfile").msgclass
  FrequencyRegulation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.FrequencyRegulation").msgclass
  PeakShaving = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.PeakShaving").msgclass
  SocLimit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.SocLimit").msgclass
  SOCManagement = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.SOCManagement").msgclass
  VoltageRegulation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.VoltageRegulation").msgclass
  VoltageDroop = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.VoltageDroop").msgclass
  VoltagePI = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.VoltagePI").msgclass
  CapacityFirming = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.CapacityFirming").msgclass
  ESSFunction = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSFunction").msgclass
  ESSPoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSPoint").msgclass
  ESSCurvePoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCurvePoint").msgclass
  ESSCSG = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSCSG").msgclass
  ESSControlScheduleFSCH = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSControlScheduleFSCH").msgclass
  EssControlFSCC = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.EssControlFSCC").msgclass
  ESSControl = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSControl").msgclass
  ESSControlProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSControlProfile").msgclass
  ESSDiscreteControlDBAT = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSDiscreteControlDBAT").msgclass
  ESSDiscreteControl = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSDiscreteControl").msgclass
  ESSDiscreteControlProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSDiscreteControlProfile").msgclass
  EssEventZBAT = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.EssEventZBAT").msgclass
  ESSPointStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSPointStatus").msgclass
  ESSEventAndStatusZGEN = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSEventAndStatusZGEN").msgclass
  ESSEventZGEN = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSEventZGEN").msgclass
  ESSEvent = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSEvent").msgclass
  ESSEventProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSEventProfile").msgclass
  ESSReading = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSReading").msgclass
  ESSReadingProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSReadingProfile").msgclass
  EssStatusZBAT = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.EssStatusZBAT").msgclass
  ESSStatusZGEN = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSStatusZGEN").msgclass
  ESSStatus = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSStatus").msgclass
  ESSStatusProfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("essmodule.ESSStatusProfile").msgclass
end
